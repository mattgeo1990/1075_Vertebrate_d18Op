)
# Create ggplot for d18Ow~lat gradients
ggplot(data = d18Ow_lat_modern, aes(x = lat, y = d18Ow)) +
geom_line(size = 1, color = "black", linetype = 3) + # Line style and thickness
# CoolK
geom_line(data = d18Ow_lat_coolk, aes(x = lat, y = d18Ow), color = "#0072B2", size = 1) +
# WarmK
geom_line(data = d18Ow_lat_warmk, aes(x = lat, y = d18Ow), color = "#D55E00", size = 1) +
# GENMOM
geom_line(data = d18Ow_lat_GENMOM, aes(x = lat, y = d18Ow), color = "#009E73", size = 1) +
# Add Celina's data
geom_point(data = celina_turtles, aes(x = lat, y = mean_d18Ow), size = 2, color = "black", shape = 5) +
# add V1075 data
geom_point(data = V1075_dual_d18Osw, aes(x = lat, y = Mean), size = 2, color = "black") +
# Add latitude 95% CI error bars for V1075
geom_errorbarh(data = V1075_dual_d18Osw, aes(y = Mean, xmin = lat_lower, xmax = lat_upper),
height = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(-20, 0)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression("δ"^18 * "O"[sw] * "(‰ V-SMOW)")
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
# Filter the data for the specified formation
filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cedar Mountain")]
# Check if there are enough data points
if (length(filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(filtered_d18Ow, na.rm = TRUE)
std_error <- sd(filtered_d18Ow, na.rm = TRUE) / sqrt(length(filtered_d18Ow))
# Calculate the 95% CI limits
ci_lower <- mean_value - 1.96 * std_error
ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", ci_lower, "\n")
cat("Upper Limit:", ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Subset Holly Creek data
hc_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Holly Creek")]
# Check if there are enough data points
if (length(hc_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(hc_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(hc_filtered_d18Ow, na.rm = TRUE) / sqrt(length(hc_filtered_d18Ow))
# Calculate the 95% CI limits
HC_d18Ow_ci_lower <- mean_value - 1.96 * std_error
HC_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", HC_d18Ow_ci_lower, "\n")
cat("Upper Limit:", HC_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Calculate the mean and standard error
mean_value <- mean(cl_filtered_d18Ow, na.rm = TRUE)
# Subset Cloverly data
cl_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cloverly")]
# Check if there are enough data points
if (length(cl_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(cl_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(cl_filtered_d18Ow, na.rm = TRUE) / sqrt(length(cl_filtered_d18Ow))
# Calculate the 95% CI limits
cl_d18Ow_ci_lower <- mean_value - 1.96 * std_error
cl_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", cl_d18Ow_ci_lower, "\n")
cat("Upper Limit:", cl_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Create the data frame
celina_turtles <- data.frame(
mean_d18Ow = c(hf, cl, cmf),
lat = c(OKTXlat, Cloverly_Paleolat_mean, RRlat),
lat_CI_upper <- c(OKTXlat_upper, Cloverly_paleolat_CI_upper, RRlat_upper),
lat_CI_lower <- c(OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower),
d18Ow_upper <- c(HC_d18Ow_ci_upper, cl_d18Ow_ci_upper,CMF_d18Ow_ci_upper),
d18Ow_lower <- c( HC_d18Ow_ci_lower, cl_d18Ow_ci_lower,CMF_d18Ow_ci_lower)
)
# Subset Cedar Mountain data
filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cedar Mountain")]
# Check if there are enough data points
if (length(filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(filtered_d18Ow, na.rm = TRUE)
std_error <- sd(filtered_d18Ow, na.rm = TRUE) / sqrt(length(filtered_d18Ow))
# Calculate the 95% CI limits
CMF_d18Ow_ci_lower <- mean_value - 1.96 * std_error
CMF_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", CMF_d18Ow_ci_lower, "\n")
cat("Upper Limit:", CMF_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Subset Holly Creek data
hc_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Holly Creek")]
# Check if there are enough data points
if (length(hc_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(hc_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(hc_filtered_d18Ow, na.rm = TRUE) / sqrt(length(hc_filtered_d18Ow))
# Calculate the 95% CI limits
HC_d18Ow_ci_lower <- mean_value - 1.96 * std_error
HC_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", HC_d18Ow_ci_lower, "\n")
cat("Upper Limit:", HC_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Subset Cloverly data
cl_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cloverly")]
# Check if there are enough data points
if (length(cl_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(cl_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(cl_filtered_d18Ow, na.rm = TRUE) / sqrt(length(cl_filtered_d18Ow))
# Calculate the 95% CI limits
cl_d18Ow_ci_lower <- mean_value - 1.96 * std_error
cl_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", cl_d18Ow_ci_lower, "\n")
cat("Upper Limit:", cl_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Create the data frame
celina_turtles <- data.frame(
mean_d18Ow = c(hf, cl, cmf),
lat = c(OKTXlat, Cloverly_Paleolat_mean, RRlat),
lat_CI_upper <- c(OKTXlat_upper, Cloverly_paleolat_CI_upper, RRlat_upper),
lat_CI_lower <- c(OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower),
d18Ow_upper <- c(HC_d18Ow_ci_upper, cl_d18Ow_ci_upper,CMF_d18Ow_ci_upper),
d18Ow_lower <- c( HC_d18Ow_ci_lower, cl_d18Ow_ci_lower,CMF_d18Ow_ci_lower)
)
OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower
OKTXlat_lower
Cloverly_paleolat_CI_lower
RRlat_lower
c(OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower)
# Create the data frame
celina_turtles <- data.frame(
mean_d18Ow = c(hf, cl, cmf),
lat = c(OKTXlat, Cloverly_Paleolat_mean, RRlat),
lat_CI_upper <- c(OKTXlat_upper, Cloverly_paleolat_CI_upper, RRlat_upper),
lat_CI_lower <- c(OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower),
d18Ow_upper <- c(HC_d18Ow_ci_upper, cl_d18Ow_ci_upper,CMF_d18Ow_ci_upper),
d18Ow_lower <- c( HC_d18Ow_ci_lower, cl_d18Ow_ci_lower,CMF_d18Ow_ci_lower)
)
celina_turtles$lat_CI_upper....c.OKTXlat_upper..Cloverly_paleolat_CI_upper..
# Create ggplot for d18Ow~lat gradients
ggplot(data = d18Ow_lat_modern, aes(x = lat, y = d18Ow)) +
geom_line(size = 1, color = "black", linetype = 3) + # Line style and thickness
# CoolK
geom_line(data = d18Ow_lat_coolk, aes(x = lat, y = d18Ow), color = "#0072B2", size = 1) +
# WarmK
geom_line(data = d18Ow_lat_warmk, aes(x = lat, y = d18Ow), color = "#D55E00", size = 1) +
# GENMOM
geom_line(data = d18Ow_lat_GENMOM, aes(x = lat, y = d18Ow), color = "#009E73", size = 1) +
# Add Celina's data
geom_point(data = celina_turtles, aes(x = lat, y = mean_d18Ow), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Celina's data
geom_errorbarh(data = celina_turtles, aes(y = mean_d18Ow, xmin = lat_CI_upper....c.OKTXlat_upper..Cloverly_paleolat_CI_upper.., xmax = lat_CI_lower....c.OKTXlat_lower..Cloverly_paleolat_CI_lower..),
height = 0.5, color = "black") +
# add V1075 data
geom_point(data = V1075_dual_d18Osw, aes(x = lat, y = Mean), size = 2, color = "black") +
# Add latitude 95% CI error bars for V1075
geom_errorbarh(data = V1075_dual_d18Osw, aes(y = Mean, xmin = lat_lower, xmax = lat_upper),
height = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(-20, 0)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression("δ"^18 * "O"[sw] * "(‰ V-SMOW)")
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
RRlat_lower
RRlat_upper
RRlat
RRlat <- 45.34
RRlat_upper <- 46.94
RRlat_lower <- 43.79
# Trinity paleolat based on lat: 33.73°N, long: -97.16 of the I-35 bridge over the Red River, in vicinity of Kate's sampling sites (https://doi.org/10.1016/j.palaeo.2019.109491)
OKTXlat <- 38.72
OKTXlat_upper <- 40.3
OKTXlat_lower <- 37.2
# load Celina's turtle data
CelinaTurtles <- read.csv("/Users/allen/Documents/Data Analysis/Data/Geochem/SuarezEtAl2020_AptianAlbianTurtleDATA.csv")
# set the paleolatitudes
CelinaTurtles$Palaeolatitude[which(CelinaTurtles$Formation == "Holly Creek")] <- OKTXlat # Antlers and Holly Creek are at nearly same coordinates
CelinaTurtles$Palaeolatitude[which(CelinaTurtles$Formation == "Cedar Mountain")] <- RRlat
CelinaTurtles$Palaeolatitude[which(CelinaTurtles$Formation == "Cloverly")] <- Cloverly_Paleolat_mean
hf <- mean(CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Holly Creek")])
cl <- mean(CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cloverly")])
cmf <- mean(CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cedar Mountain")])
# Estimate 95% CI of d18Ow
# Subset Cedar Mountain data
filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cedar Mountain")]
# Check if there are enough data points
if (length(filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(filtered_d18Ow, na.rm = TRUE)
std_error <- sd(filtered_d18Ow, na.rm = TRUE) / sqrt(length(filtered_d18Ow))
# Calculate the 95% CI limits
CMF_d18Ow_ci_lower <- mean_value - 1.96 * std_error
CMF_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", CMF_d18Ow_ci_lower, "\n")
cat("Upper Limit:", CMF_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Subset Holly Creek data
hc_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Holly Creek")]
# Check if there are enough data points
if (length(hc_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(hc_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(hc_filtered_d18Ow, na.rm = TRUE) / sqrt(length(hc_filtered_d18Ow))
# Calculate the 95% CI limits
HC_d18Ow_ci_lower <- mean_value - 1.96 * std_error
HC_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", HC_d18Ow_ci_lower, "\n")
cat("Upper Limit:", HC_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Subset Cloverly data
cl_filtered_d18Ow <- CelinaTurtles$d18Ow[which(CelinaTurtles$Formation == "Cloverly")]
# Check if there are enough data points
if (length(cl_filtered_d18Ow) > 1) {
# Calculate the mean and standard error
mean_value <- mean(cl_filtered_d18Ow, na.rm = TRUE)
std_error <- sd(cl_filtered_d18Ow, na.rm = TRUE) / sqrt(length(cl_filtered_d18Ow))
# Calculate the 95% CI limits
cl_d18Ow_ci_lower <- mean_value - 1.96 * std_error
cl_d18Ow_ci_upper <- mean_value + 1.96 * std_error
# Print the results
cat("95% Confidence Interval:\n")
cat("Lower Limit:", cl_d18Ow_ci_lower, "\n")
cat("Upper Limit:", cl_d18Ow_ci_upper, "\n")
} else {
cat("Not enough data points to calculate a 95% CI.\n")
}
# Create the data frame
celina_turtles <- data.frame(
mean_d18Ow = c(hf, cl, cmf),
lat = c(OKTXlat, Cloverly_Paleolat_mean, RRlat),
lat_CI_upper <- c(OKTXlat_upper, Cloverly_paleolat_CI_upper, RRlat_upper),
lat_CI_lower <- c(OKTXlat_lower, Cloverly_paleolat_CI_lower, RRlat_lower),
d18Ow_upper <- c(HC_d18Ow_ci_upper, cl_d18Ow_ci_upper,CMF_d18Ow_ci_upper),
d18Ow_lower <- c(HC_d18Ow_ci_lower, cl_d18Ow_ci_lower,CMF_d18Ow_ci_lower)
)
# Create ggplot for d18Ow~lat gradients
ggplot(data = d18Ow_lat_modern, aes(x = lat, y = d18Ow)) +
geom_line(size = 1, color = "black", linetype = 3) + # Line style and thickness
# CoolK
geom_line(data = d18Ow_lat_coolk, aes(x = lat, y = d18Ow), color = "#0072B2", size = 1) +
# WarmK
geom_line(data = d18Ow_lat_warmk, aes(x = lat, y = d18Ow), color = "#D55E00", size = 1) +
# GENMOM
geom_line(data = d18Ow_lat_GENMOM, aes(x = lat, y = d18Ow), color = "#009E73", size = 1) +
# Add Celina's data
geom_point(data = celina_turtles, aes(x = lat, y = mean_d18Ow), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Celina's data
geom_errorbarh(data = celina_turtles, aes(y = mean_d18Ow, xmin = lat_CI_upper....c.OKTXlat_upper..Cloverly_paleolat_CI_upper.., xmax = lat_CI_lower....c.OKTXlat_lower..Cloverly_paleolat_CI_lower..),
height = 0.5, color = "black") +
# add V1075 data
geom_point(data = V1075_dual_d18Osw, aes(x = lat, y = Mean), size = 2, color = "black") +
# Add latitude 95% CI error bars for V1075
geom_errorbarh(data = V1075_dual_d18Osw, aes(y = Mean, xmin = lat_lower, xmax = lat_upper),
height = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(-20, 0)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression("δ"^18 * "O"[sw] * "(‰ V-SMOW)")
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
# Create ggplot for d18Ow~lat gradients
ggplot(data = d18Ow_lat_modern, aes(x = lat, y = d18Ow)) +
geom_line(size = 1, color = "black", linetype = 3) + # Line style and thickness
# CoolK
geom_line(data = d18Ow_lat_coolk, aes(x = lat, y = d18Ow), color = "#0072B2", size = 1) +
# WarmK
geom_line(data = d18Ow_lat_warmk, aes(x = lat, y = d18Ow), color = "#D55E00", size = 1) +
# GENMOM
geom_line(data = d18Ow_lat_GENMOM, aes(x = lat, y = d18Ow), color = "#009E73", size = 1) +
# Add Celina's data
geom_point(data = celina_turtles, aes(x = lat, y = mean_d18Ow), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Celina's data
geom_errorbarh(data = celina_turtles, aes(y = mean_d18Ow, xmin = lat_CI_upper....c.OKTXlat_upper..Cloverly_paleolat_CI_upper.., xmax = lat_CI_lower....c.OKTXlat_lower..Cloverly_paleolat_CI_lower..),
height = 0.5, color = "black") +
# Add d18Ow 95% CI error bars for Celina's data
geom_errorbar(data = celina_turtles, aes(x = lat, ymin = d18Ow_upper....c.HC_d18Ow_ci_upper..cl_d18Ow_ci_upper..CMF_d18Ow_ci_upper., ymax = d18Ow_lower....c.HC_d18Ow_ci_lower..cl_d18Ow_ci_lower..CMF_d18Ow_ci_lower. ),
width = 0.5, color = "black") +
# add V1075 data
geom_point(data = V1075_dual_d18Osw, aes(x = lat, y = Mean), size = 2, color = "black") +
# Add latitude 95% CI error bars for V1075
geom_errorbarh(data = V1075_dual_d18Osw, aes(y = Mean, xmin = lat_lower, xmax = lat_upper),
height = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(-20, 0)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression("δ"^18 * "O"[sw] * "(‰ V-SMOW)")
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
# Create ggplot for d18Ow~lat gradients
ggplot(data = d18Ow_lat_modern, aes(x = lat, y = d18Ow)) +
geom_line(size = 1, color = "black", linetype = 3) + # Line style and thickness
# CoolK
geom_line(data = d18Ow_lat_coolk, aes(x = lat, y = d18Ow), color = "#0072B2", size = 1) +
# WarmK
geom_line(data = d18Ow_lat_warmk, aes(x = lat, y = d18Ow), color = "#D55E00", size = 1) +
# GENMOM
geom_line(data = d18Ow_lat_GENMOM, aes(x = lat, y = d18Ow), color = "#009E73", size = 1) +
# Add Celina's data
geom_point(data = celina_turtles, aes(x = lat, y = mean_d18Ow), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Celina's data
geom_errorbarh(data = celina_turtles, aes(y = mean_d18Ow, xmin = lat_CI_upper....c.OKTXlat_upper..Cloverly_paleolat_CI_upper.., xmax = lat_CI_lower....c.OKTXlat_lower..Cloverly_paleolat_CI_lower..),
height = 0.5, color = "black") +
# add V1075 data
geom_point(data = V1075_dual_d18Osw, aes(x = lat, y = Mean), size = 2, color = "black") +
# Add latitude 95% CI error bars for V1075
geom_errorbarh(data = V1075_dual_d18Osw, aes(y = Mean, xmin = lat_lower, xmax = lat_upper),
height = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(-20, 0)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression("δ"^18 * "O"[sw] * "(‰ V-SMOW)")
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
# Print and export using tiff() and dev.off
setwd("/Users/allen/Documents/GitHub/1075_Vertebrate_d18Op/Exports")
tiff("d18Owater_gradient.tiff", units="mm", width= 74, height = 70, res=500)
ggsave("d18Owater_gradient.tiff", units="mm", width= 74, height= 70, dpi=500, compression = 'lzw')
dev.off()
# Create the ggplot with the main series, confidence interval, and V1075 MAWSAT
ggplot() +
# Add the main series
geom_line(data = modern, aes(x = lat, y = temp), size = 1, color = "black", linetype = "dotted") +
# Add the shaded confidence interval
geom_ribbon(data = Judd24_Albian, aes(x = lat, ymin = temp_lower, ymax = temp_upper),
fill = "gray", alpha = 0.5) +
# Add the central line of the new series
geom_line(data = Judd24_Albian, aes(x = lat, y = temp_mean), size = 1, color = "black") +
# Add V1075 mean simulated MAWSAT
geom_point(data = V1075_MAWSAT_mean, aes(x = lat, y = temp), size = 2, color = "black") +
# Add error bars for V1075 simulated MAWSAT
geom_errorbar(data = V1075_MAWSAT_mean, aes(x = lat, ymin = V1075_MAWSAT_lower, ymax = V1075_MAWSAT_upper),
width = 0.5, color = "black") +
geom_errorbar(data = V1075_MAWSAT_mean, aes(y = temp, xmin = Cloverly_paleolat_CI_lower, xmax = Cloverly_paleolat_CI_upper),
width = 0.5, color = "black") +
# Add Suarez et al. (2021) Ruby Ranch temperatures
geom_point(data =  RRTempLat, aes(x = lat, y = temp), size = 2, color = "black", shape = 1) +
# Add latitude 95% CI error bars for Suarez
geom_errorbar(data = RRTempLat, aes(y = temp, xmin = RRlat_lower, xmax = RRlat_upper),
width = 0.5, color = "black") +
# Add Kate A.'s Antlers Fm temperatures
geom_point(data =  OKTX_TempLat, aes(x = lat, y = temp), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Antlers
geom_errorbar(data = OKTX_TempLat, aes(y = temp, xmin = lat_CI_lower, xmax = lat_CI_upper),
width = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(0, 50)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression(paste("T (", degree, "C)"))
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
# Create the ggplot with the main series, confidence interval, and V1075 MAWSAT
ggplot() +
# Add the main series
geom_line(data = modern, aes(x = lat, y = temp), size = 1, color = "black", linetype = "dotted") +
# Add the shaded confidence interval
geom_ribbon(data = Judd24_Albian, aes(x = lat, ymin = temp_lower, ymax = temp_upper),
fill = "gray", alpha = 0.5) +
# Add the central line of the new series
geom_line(data = Judd24_Albian, aes(x = lat, y = temp_mean), size = 1, color = "#E66101") +
# Add V1075 mean simulated MAWSAT
geom_point(data = V1075_MAWSAT_mean, aes(x = lat, y = temp), size = 2, color = "black") +
# Add error bars for V1075 simulated MAWSAT
geom_errorbar(data = V1075_MAWSAT_mean, aes(x = lat, ymin = V1075_MAWSAT_lower, ymax = V1075_MAWSAT_upper),
width = 0.5, color = "black") +
geom_errorbar(data = V1075_MAWSAT_mean, aes(y = temp, xmin = Cloverly_paleolat_CI_lower, xmax = Cloverly_paleolat_CI_upper),
width = 0.5, color = "black") +
# Add Suarez et al. (2021) Ruby Ranch temperatures
geom_point(data =  RRTempLat, aes(x = lat, y = temp), size = 2, color = "black", shape = 1) +
# Add latitude 95% CI error bars for Suarez
geom_errorbar(data = RRTempLat, aes(y = temp, xmin = RRlat_lower, xmax = RRlat_upper),
width = 0.5, color = "black") +
# Add Kate A.'s Antlers Fm temperatures
geom_point(data =  OKTX_TempLat, aes(x = lat, y = temp), size = 2, color = "black", shape = 5) +
# Add latitude 95% CI error bars for Antlers
geom_errorbar(data = OKTX_TempLat, aes(y = temp, xmin = lat_CI_lower, xmax = lat_CI_upper),
width = 0.5, color = "black") +
# Set axis limits
coord_cartesian(xlim = c(35, 55), ylim = c(0, 50)) +
# Add axis labels
labs(
x = expression(paste("Latitude (", degree, "N)")),
y = expression(paste("T (", degree, "C)"))
) +
# Apply minimal theme
theme_minimal() +
# Customize axis text and title sizes
theme(
panel.grid = element_blank(),                      # Remove grid lines
panel.border = element_rect(color = "black", fill = NA), # Add border
axis.ticks = element_line(color = "black"),        # Keep axis tick marks
axis.text = element_text(size = 12),               # Customize axis text size
axis.title = element_text(size = 14)               # Customize axis title size
)
V1075_MAWSAT_mean
# Print and export using tiff() and dev.off
setwd("/Users/allen/Documents/GitHub/1075_Vertebrate_d18Op/Exports")
tiff("temp_gradient.tiff", units="mm", width= 74, height = 70, res=500)
ggsave("temp_gradient.tiff", units="mm", width= 74, height= 70, dpi=500, compression = 'lzw')
dev.off()
cat("95% Confidence Interval:\n")
cat("Lower Limit:", CMF_d18Ow_ci_lower, "\n")
cat("Upper Limit:", CMF_d18Ow_ci_upper, "\n")
cat("95% Confidence Interval:\n")
cat("Lower Limit:", HC_d18Ow_ci_lower, "\n")
cat("Upper Limit:", HC_d18Ow_ci_upper, "\n")
mean_value <- mean(hc_filtered_d18Ow, na.rm = TRUE)
mean(hc_filtered_d18Ow, na.rm = TRUE)
mean_value
cat("Lower Limit:", HC_d18Ow_ci_lower, "\n")
cat("Upper Limit:", HC_d18Ow_ci_upper, "\n")
sd(hc_filtered_d18Ow)
cat("95% Confidence Interval:\n")
cat("Lower Limit:", cl_d18Ow_ci_lower, "\n")
cat("Upper Limit:", cl_d18Ow_ci_upper, "\n")
cat("Mean δ¹⁸Ow:", mean_d18Ow, "\n")
cat("95% CI for δ¹⁸Ow: [", quantiles[1], ",", quantiles[2], "]\n")
